@model ToDoDotNet.Models.QueryResultResource<ToDoDotNet.Models.ToDoViewModel>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<a href="@Url.Action("Create")" class="btn btn-success m-3">Create new to do</a>

@{
    var grid = new WebGrid(canPage: true, rowsPerPage: 10, canSort: true);
    grid.Bind(Model.Items, rowCount: Model.TotalItems, autoSortAndPage: false);

    
}

@grid.GetHtml(
tableStyle: "table table-bordered table-hover",
columns: grid.Columns(
         grid.Column("Title", "Title", style: "col-lg-3"),
         grid.Column("CreationDate", "Date", style: "col-lg-3"),
         grid.Column("Body", "Body", style: "col-lg-3",canSort: false),
         grid.Column(header: "Action", canSort: false, style: "action  col-lg-2",
         format: (item) => !Request.IsAuthenticated ? null : new HtmlString(
             "<a href=" + @Url.Action("Edit/" + item.Id) + " class='btn btn-warning m-3'>Edit</a>" +
             $"<button onclick='deleteToDoItem({item.Id})'  class='btn btn-danger'>Delete</button>"
             )))

             )

@section scripts {
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}

<script>
    function deleteToDoItem(id) {
        let statusOk = 200;
        if (confirm("Are you sure you want to delete this item?")) {

            fetch('@Url.Action("Delete")' + '/' + id, {
                method: "post",

                body: JSON.stringify({
                    id: id,
                })
            })
                .then(data => data.status == statusOk ? location.reload() : alert("Something went wrong"))
        }
    }
</script>
